From 9a6334c6c736cdd56f5fe835f2ab3cdc3ab5dbce Mon Sep 17 00:00:00 2001
From: Jakub Wilk <jwilk@jwilk.net>
Date: Mon, 30 Sep 2019 08:02:47 +0200
Subject: [PATCH] Fix type for overloaded drawImage() methods.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fixes:

    .../include/poppler/OutputDev.h:300:16: error: ‘virtual void OutputDev::drawImage(GfxState*, Object*, Stream*, int, int, GfxImageColorMap*, bool, const int*, bool)’
    pdf-dpi.cc:36:16: error:   by ‘virtual void DpiGuessDevice::drawImage(pdf::gfx::State*, pdf::Object*, pdf::Stream*, int, int, pdf::gfx::ImageColorMap*, bool, int*, bool)’ [-Werror=overloaded-virtual]
    pdf2djvu.cc:338:8: error:   by ‘void MutedRenderer::drawImage(pdf::gfx::State*, pdf::Object*, pdf::Stream*, int, int, pdf::gfx::ImageColorMap*, bool, int*, bool)’ [-Werror=overloaded-virtual]

https://cgit.freedesktop.org/poppler/poppler/commit/?id=120cfc0de67501988edc9ded58d2a534d0b5a70e
---
 pdf-dpi.cc  |  8 ++++++++
 pdf2djvu.cc | 30 ++++++++++++++++++++++++++++--
 2 files changed, 36 insertions(+), 2 deletions(-)

diff --git a/pdf-dpi.cc b/pdf-dpi.cc
index e7c3fd9..b222f46 100644
--- a/pdf-dpi.cc
+++ b/pdf-dpi.cc
@@ -33,12 +33,20 @@ class DpiGuessDevice : public pdf::OutputDevice
     this->process_image(state, width, height);
   }
 
+  // POPPLER_VERSION < 8200
   virtual void drawImage(pdf::gfx::State *state, pdf::Object *object, pdf::Stream *stream, int width, int height,
     pdf::gfx::ImageColorMap *color_map, bool interpolate, int *mask_colors, bool inline_image)
   {
     this->process_image(state, width, height);
   }
 
+  // POPPLER_VERSION >= 8200
+  virtual void drawImage(pdf::gfx::State *state, pdf::Object *object, pdf::Stream *stream, int width, int height,
+    pdf::gfx::ImageColorMap *color_map, bool interpolate, const int *mask_colors, bool inline_image)
+  {
+    this->process_image(state, width, height);
+  }
+
   virtual void drawMaskedImage(pdf::gfx::State *state, pdf::Object *object, pdf::Stream *stream, int width, int height,
     pdf::gfx::ImageColorMap *color_map, bool interpolate,
     pdf::Stream *mask_stream, int mask_width, int mask_height, bool mask_invert, bool mask_interpolate)
diff --git a/pdf2djvu.cc b/pdf2djvu.cc
index 2e8fad0..6330c12 100644
--- a/pdf2djvu.cc
+++ b/pdf2djvu.cc
@@ -335,16 +335,42 @@ class MutedRenderer: public pdf::Renderer
     return;
   }
 
+  // POPPLER_VERSION >= 8200
   void drawImage(pdf::gfx::State *state, pdf::Object *object, pdf::Stream *stream, int width, int height,
-    pdf::gfx::ImageColorMap *color_map, bool interpolate, int *mask_colors, bool inline_image)
+    pdf::gfx::ImageColorMap *color_map, bool interpolate, const int *mask_colors, bool inline_image)
   {
     if (is_foreground_color_map(color_map) || config.no_render)
     {
       this->skipped_elements = true;
       return;
     }
+    class const_adapter
+    {
+    protected:
+      const int *i;
+    public:
+      const_adapter(const int *i)
+      : i(i)
+      { }
+      operator int * () const
+      {
+        return const_cast<int *>(i);
+      }
+      operator const int* () const
+      {
+        return i;
+      }
+    };
     Renderer::drawImage(state, object, stream, width, height, color_map,
-      interpolate, mask_colors, inline_image);
+      interpolate, const_adapter(mask_colors), inline_image);
+  }
+
+  // POPPLER_VERSION < 8200
+  void drawImage(pdf::gfx::State *state, pdf::Object *object, pdf::Stream *stream, int width, int height,
+    pdf::gfx::ImageColorMap *color_map, bool interpolate, int *mask_colors, bool inline_image)
+  {
+    this->drawImage(state, object, stream, width, height, color_map,
+      interpolate, const_cast<const int*>(mask_colors), inline_image);
   }
 
   void drawMaskedImage(pdf::gfx::State *state, pdf::Object *object, pdf::Stream *stream, int width, int height,
